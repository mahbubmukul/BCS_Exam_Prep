plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

def keystorePropertiesFile = rootProject.file("../BCS_Exam_Prep_KeyStore/keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

def appPropertiesFile = rootProject.file("app-settings.properties")
def appProperties = new Properties()
appProperties.load(new FileInputStream(appPropertiesFile))
def envProperties


android {
    compileSdkVersion = appProperties['sdk.version.compile'] as int
    buildToolsVersion '30.0.3'

    signingConfigs {
        PriyoSigningConfig {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']

        }
    }

    defaultConfig {
        applicationId "com.exam_prep.bcs"
        minSdkVersion appProperties['sdk.version.min'] as int
        targetSdkVersion appProperties['sdk.version.target'] as int
        multiDexEnabled true
        versionCode appProperties['app.version.code'] as int
        versionName appProperties['app.version.name']
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        def buildVariant = getBuildVariant()
        def environmentPath
        if ((buildVariant == "Release") || (buildVariant == "DebugLive")) {
            environmentPath = appProperties["env.path.live"]
        } else if ((buildVariant == "ReleaseTest") || (buildVariant == "Debug")) {
            environmentPath = appProperties["env.path.test"]
        } else {
            environmentPath = appProperties["env.path.live"]
        }

        def envPropertiesFile = rootProject.file(environmentPath)
        envProperties = new Properties()
        envProperties.load(new FileInputStream(envPropertiesFile))
        println("buildVariant = $buildVariant")
        for (String key : envProperties.keySet()) {
            buildConfigField "String", key.replaceAll("\\.", "_").toUpperCase(), "\"" + envProperties[key] + "\""

        }
        manifestPlaceholders = [PriyoQuizUrl: (envProperties["base.url.priyo.quizshare"] as String).replace("http://", "")]
        resValue("string", "ipay_callback_url_scheme", String.format("ipay%s", envProperties["ipay.app.key"] as String))

    }
    buildTypes {
        debug {
            debuggable true
            applicationIdSuffix ".debug"
            signingConfig signingConfigs.PriyoSigningConfig
            manifestPlaceholders = [appName: "@string/app_name_debug_test", fileProvider: "@xml/provider_paths_debug_test", iPayAppKey: envProperties["ipay.app.key"]]
            multiDexEnabled true
        }
        debugLive {
            debuggable true
            signingConfig signingConfigs.PriyoSigningConfig
            applicationIdSuffix ".debug.live"
            manifestPlaceholders = [appName: "@string/app_name_debug_Live", fileProvider: "@xml/provider_paths_debug_live", iPayAppKey: envProperties["ipay.app.key"]]
        }
        releaseTest {
            debuggable true
            manifestPlaceholders = [appName: "@string/app_name_test", fileProvider: "@xml/provider_paths_test", iPayAppKey: envProperties["ipay.app.key"]]
            applicationIdSuffix ".release.test"
            signingConfig signingConfigs.PriyoSigningConfig
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            manifestPlaceholders = [appName: "@string/app_name", fileProvider: "@xml/provider_paths", iPayAppKey: envProperties["ipay.app.key"]]
            signingConfig signingConfigs.PriyoSigningConfig
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    configurations.all {
        // this is a workaround for the issue:
        // https://stackoverflow.com/questions/52521302/how-to-solve-program-type-already-present-com-google-common-util-concurrent-lis
        exclude group: 'com.google.guava', module: 'listenablefuture'
    }
// To inline the bytecode built with JVM target 1.8 into
// bytecode that is being built with JVM target 1.6. (e.g. navArgs)


    kotlinOptions {
        jvmTarget = "1.8"
    }

    buildFeatures {
        dataBinding true
    }
}

def getBuildVariant() {
    for (TaskExecutionRequest t : gradle.getStartParameter().getTaskRequests()) {
        for (String command : t.args) {
            if (command.matches(":app:generate(.*)Sources")) {
                return command.replaceAll(":app:generate(.*)Sources", "\$1")
            } else if (command.matches(":app:assemble(.*)")) {
                return command.replaceAll(":app:assemble(.*)", "\$1")
            }
        }
    }
    return "Release"
}

allprojects {
    repositories {
        maven { url 'https://jitpack.io' }
    }
}

dependencies {

    def appcompat_version = "1.2.0"
    def room_version = '2.2.6'
    def nav_version = "2.3.3"
    def dagger_version = '2.33'
    def retrofit_version = "2.9.0"
    def work_version = "2.5.0"

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.appcompat:appcompat-resources:$appcompat_version"
    implementation "androidx.browser:browser:1.3.0"
    implementation "androidx.cardview:cardview:1.0.0"
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.paging:paging-runtime-ktx:2.1.2'
    implementation 'androidx.palette:palette-ktx:1.0.0'
    implementation "androidx.recyclerview:recyclerview:1.1.0"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation ("androidx.work:work-runtime-ktx:$work_version"){
        exclude group: 'com.google.guava', module: 'listenablefuture'
    }

    kapt 'com.github.bumptech.glide:compiler:4.12.0'
    implementation("com.github.bumptech.glide:glide:4.12.0") {
        exclude group: "com.android.support"
    }
    implementation 'com.github.bumptech.glide:okhttp3-integration:4.12.0'

    implementation 'com.google.android.gms:play-services-ads:19.7.0'
    implementation 'com.google.android.gms:play-services-auth:19.0.0'
    implementation 'com.google.android.gms:play-services-location:18.0.0'
    implementation 'com.google.android.gms:play-services-maps:17.0.0'
    implementation 'com.google.android.gms:play-services-places:17.0.0'

    implementation 'com.google.android.material:material:1.3.0'

    implementation 'com.google.firebase:firebase-ads:19.7.0'
    implementation 'com.google.firebase:firebase-analytics:18.0.2'
    implementation 'com.google.firebase:firebase-config:20.0.4'
    implementation 'com.google.firebase:firebase-database:19.6.0'
    implementation 'com.google.firebase:firebase-dynamic-links-ktx:19.1.1'
    implementation platform('com.google.firebase:firebase-bom:26.5.0')
    implementation 'com.google.firebase:firebase-messaging:21.0.1'

    implementation 'com.airbnb.android:lottie:3.6.1'
    implementation 'com.makeramen:roundedimageview:2.3.0'
    implementation 'com.googlecode.libphonenumber:libphonenumber:8.12.19'
    implementation 'com.hbb20:ccp:2.4.5'

    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    implementation("com.squareup.retrofit2:retrofit:$retrofit_version") {
        exclude module: 'okhttp'
    }
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2'

    implementation 'com.facebook.android:facebook-android-sdk:8.1.0'
    implementation 'com.facebook.android:audience-network-sdk:6.2.1'

    implementation 'com.theartofdev.edmodo:android-image-cropper:2.8.0'
    implementation 'com.github.jkwiecien:EasyImage:3.0.4'
    implementation 'com.github.warkiz.tickseekbar:tickseekbar:0.1.4'
    implementation 'com.karumi:dexter:6.2.2'
    implementation 'com.google.android:flexbox:2.0.1'
    implementation 'com.mikepenz:actionitembadge:4.0.0'
    implementation 'com.github.chrisbanes:PhotoView:2.3.0'

    implementation("com.google.guava:guava:30.1-jre")

    implementation 'io.reactivex.rxjava2:rxjava:2.2.6'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'com.github.jeffreyliu8:FlexBoxRadioGroup:0.0.8'

    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'
    implementation 'com.pierfrancescosoffritti.androidyoutubeplayer:core:10.0.5'
    implementation 'com.cloudinary:cloudinary-android:1.30.0'
    implementation 'org.aspectj:aspectjrt:1.9.6'
    implementation 'com.google.maps.android:android-maps-utils:2.2.0'
    implementation 'org.apache.commons:commons-text:1.9'

    implementation "bd.com.ipay.sdk:sdk-android-ktx:1.0.5"
}